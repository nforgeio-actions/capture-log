#------------------------------------------------------------------------------
# Appends a text file to the GitHub action log, optionally nesting the text
# within an expandable group.

name: neon-log-file
description: Appends a text file to the GitHub action log, optionally nesting the text within an expandable group
inputs:
  path:
    description: "The text file path"
    required: true
  group:
    description: "optionally specifies the group name when nesting within an expandable group"
    required: false
    default:
runs:
  using: composite
  steps:
  - name: append-file
    shell: pwsh
    run: |
      # Verify that we're running on a properly configured neonFORGE jobrunner 
      # and import the deployment and action scripts from neonCLOUD.
      
      # NOTE: This assumes that the required [$NC_ROOT/Powershell/*.ps1] files
      #       in the current clone of the repo on the runner are up-to-date
      #       enough to be able to obtain secrets and use GitHub Action functions.
      #       If this is not the case, you'll have to manually pull the repo 
      #       first on the runner.
      
      $ncRoot = $env:NC_ROOT
      
      if (![System.IO.Directory]::Exists($ncRoot))
      {
          throw "Runner Config: neonCLOUD repo is not present."
      }
      
      $ncPowershell = [System.IO.Path]::Combine($ncRoot, "Powershell")
      
      Push-Location $ncPowershell
      . ./includes.ps1
      Pop-Location
      
      # Perform the operation
      
      $path  = "${{ inputs.path }}"
      $group = "${{ inputs.group }}"
      
      if ([System.String]::IsNullOrEmpty(&group))
      {
          $group = "LOG-CAPTURE"
      }
      
      Write-ActionOutputFile $path $group
      
